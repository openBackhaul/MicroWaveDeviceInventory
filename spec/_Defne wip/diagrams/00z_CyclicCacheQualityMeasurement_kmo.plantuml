@startuml 00z_CyclicCacheQualityMeasurement

skinparam responseMessageBelowArrow true

 
title
PromptForEmbeddingCausesCyclicLoadingOfDeviceInfoFromMetadataTableForQualityMeasurement
PromptForEmbeddingCausesLoadingOfCachedControlConstructForQualityMeasurement
PromptForEmbeddingCausesSelfCallingForLoadingOfControlConstructForQualityMeasurement
PromptForEmbeddingCausesWritingQualityMeasurementToElasticSearch
end title
 
participant RO as ro

participant "MWDI://v1/embed-yourself" as mwdi
participant "MWDI://v1/provide-device-status-metadata" as metadata
participant "MWDI://core-model-1-4:network-control-domain=cache/\ncontrol-construct={mountName}" as cache
participant "MWDI://core-model-1-4:network-control-domain=live/\ncontrol-construct={mountName}" as live 
participant "ElasticSearch" as es

ro -> mwdi

activate mwdi

note over mwdi
Cyclic operation starts for comparing
cached and live control-constructs
end note

note over mwdi
  <u>GetCandidateDevice</u>
  Select the device with the oldest 
  <i>last-complete-control-construct-update-time</i>
  and which is not NULL from list
end note
mwdi -> metadata : {timestamp-filter = "oldest"}
metadata --> mwdi : {mountName, deviceType}

note over mwdi
  <u>GetCachedControlConstruct</u>
  Fetch the CC for the candidate
  device from MWDI cache
end note
mwdi -> cache : {mountName}
cache --> mwdi : {cachedControlConstruct}

note over mwdi
  <u>GetLiveControlConstruct</u>
  Fetch the CC for the candidate device
  via MWDI live service
end note
mwdi -> live : {mountName}
live --> mwdi :  {liveControlConstruct}

 
note over mwdi
  <u>WriteStatisticsToElasticSearch</u>
  Compare cached and live versions
  Calculate score based on differences
  Write results to ElasticSearch
end note


mwdi -> es : {diff_summary=(deviceId, diff-counts, score, timestamp, deviceType)}

 

@enduml